_STRT_NEW_FORM_ 1 VALID_RPL 0^0:prec2:gblank:No:::rank_n:const_n:exp_n::1:-1::false::false:unlocked:VALID_RPL
/******************************************************************
Reserved Rule. Runs before sending out replace order.
******************************************************************/
char strDebug[216]="";
char strRule[20]="VALID_RPL";

FTStr sTrdAcct;
sTrdAcct = GlobalStr("TRD_ACCT");

if (strstr(PORTFOLIO, FLEX_OMRULE_NKSPD)) // If PORTFOLIO contains FLEX_OMRULE_NKSP -> Send Nikkei Spread Strat order to OMRule Loopback
{
	Pop_Msg1("VALID_RPL : Algo!");
	
	Set_FixTag_Str(FIX_TAG_STRATEGYNAME,FLEX_OMRULE_NKSPD);
	FTStr  ftDest; Get_Default_Listed_Dest(ftDest);
	Set_FixTag_Str(FIX_TAG_DESTINATION,ftDest.str());
	Set_FixTag_Str(FIX_TAG_OMUSER,TraderName());

	FTStr szBuffer;
	double dBuffer;
	
	FTStr szNKMode;
	Get_Column_Str("NKSP_MODE", szNKMode.str());
	if (!strcmp(szNKMode.str(), STRAT_MODE_ALWAYS))
	{
		szBuffer = MODEID_ALWAYS;

	}
	else if (!strcmp(szNKMode.str(), STRAT_MODE_SILENT))
	{
		szBuffer = MODEID_SILENT;
	}
	else
	{
		Pop_Msg_Color("Invalid Quoting Mode! Cannot send order!", 0, "red", "black");
		szBuffer = MODEID_INVALID;
		return false;
	}
	Set_FixTag_Str(FIX_TAG_MODE_NKSP, szBuffer.str());
	
	dBuffer = Value_Cell_Else("NKSP_STRATID", 0.0);
	szBuffer= (int)dBuffer;
	Set_FixTag_Str(FIX_TAG_STRATID_NKSP, szBuffer.str());
	
	Get_Column_Str("NKSP_PORT",szBuffer.str());
	Set_FixTag_Str(FIX_TAG_STRATPORT_NKSP, szBuffer.str());
	
	dBuffer = Value_Cell_Else("NKSP_ORDQTY", 0.0);
	szBuffer= (int)dBuffer;
	Set_FixTag_Str(FIX_TAG_ORDQTY_NKSP, szBuffer.str());
	
	dBuffer = Value_Cell_Else("NKSP_TOTALQTY", 0.0);
	szBuffer= (int)dBuffer;
	Set_FixTag_Str(FIX_TAG_TOTALQTY_NKSP, szBuffer.str());
		
	dBuffer = Value_Cell_Else("NKSP_PAYUPTICK", 0.0);
	szBuffer= (int)dBuffer;
	Set_FixTag_Str(FIX_TAG_PAYUPTICK_NKSP, szBuffer.str());
	
	dBuffer = Value_Cell_Else("NKSP_BENCH", 0.0);
	szBuffer= (int)dBuffer;
	Set_FixTag_Str(FIX_TAG_BENCHMARK_NKSP, szBuffer.str());
	
	FTStr szLeg;
	Get_Column_Str("NKSP_LEG",szLeg.str());
	if (!strcmp(szLeg.str(), LEG_QUOTE))
	{
		szBuffer = LEGID_NKSP_Q;
		Set_FixTag_Str(FIX_TAG_LEGID_NKSP, szBuffer.str());
	}
	else if (!strcmp(szLeg.str(), LEG_HEDGE))
	{
		szBuffer = LEGID_NKSP_H;
		Set_FixTag_Str(FIX_TAG_LEGID_NKSP, szBuffer.str());
	}
	else
	{
		Pop_Msg_Color("Invalid LEG! Cannot send order!", 0, "red", "black");
		return false;
	}
	
	dBuffer = Value_Cell_Else("NKSP_RUNNING", 2.0);
	if (((int)dBuffer != 0) && ((int)dBuffer != 1))
	{
		Pop_Msg_Color("Invalid RUNNING FLAG! Cannot replace strategy!", 0, "red", "black");
		return false;
	}
	szBuffer= (int)dBuffer;
	Set_FixTag_Str(FIX_TAG_RUNNING_NKSP, szBuffer.str());
	
	Set_Send_Order_Wave(Get_Order_Wave());
	
	Set_Send_Order_Dest(ALGO_DEST);
	
} // ENDIF: Replacing a Strat-Order
else // If NO FLEX_OMRULE_NKSP -> Replace 
{	
	FT_ORDER_INFO oinfo;
	int num_orders = 0;
	char szMemo[64]="";	
	FTStr szMsg;

	num_orders = Get_Active_Orders(oinfo);
	if (num_orders>0)
	{
		szMsg="Ladder RPL: Order ID=";szMsg+=oinfo.OrderId(0);
		szMsg+=" WaveName=";szMsg+=oinfo.WaveName(0);
		szMsg+=" Memo=";szMsg+=oinfo.OrdMemo(0);
		szMsg+=" AppClientId="; szMsg+=oinfo.AppClientId(0);
		szMsg+=" ClientId=";oinfo.ClientId(0);
		Pop_Msg1(szMsg);

		strcpy(szMemo, oinfo.OrdMemo(0));
	}
	
	FTStr szStratPortInd, szStratMemo;
	szStratPortInd=TraderName();szStratPortInd+="_"; szStratPortInd+=FLEX_OMRULE_NKSPD;

	if (strstr(szMemo, szStratPortInd))
	{
		// Replace from a strat portfolio
		if (strstr(szMemo, LEG_QUOTE))
		{
			Pop_Msg1("Ladder RPL: Strat Quote!");
			Set_Send_Order_Memo(szMemo);
		}
		else if (strstr(szMemo, LEG_HEDGE))
		{
			Pop_Msg1("Ladder RPL: Strat Hedge!");
			Set_Send_Order_Memo(szMemo);
		}
	}
	else
	{
		// Replace from a normal portfolio - do nothing
	
	}
	
	Set_Send_Order_Wave(Get_Order_Wave());
	
	Set_Send_Order_Memo(Get_Order_Memo());
	
	SS_Run_Script("LEVEL2","unselect");
}

Set_Send_Order_Acct(sTrdAcct.str());

return true;


_END_FORM_ *****************************************
